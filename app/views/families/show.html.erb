<nav class="navbar navbar-expand-lg" style="background-color: #FF5A5F;">
  <div class="container-fluid">
    <div class="d-flex gap-4">
      <%= link_to "Rent Your Family" , root_path, class: "navbar-brand text-white fw-bold" %>
    </div>

    <div class="ms-auto d-flex gap-2">
      <% if user_signed_in? %>
        <%= link_to "Logout" , destroy_user_session_path, method: :delete, data: { turbo_method: :delete },
          class: "btn btn-light fw-semibold text-danger" %>
          <% if current_user.role=="provider" %>
            <%= link_to "Dashboard" , providers_path, class: "btn btn-light fw-semibold text-danger" %>
              <% end %>
                <% else %>
                  <%= link_to "Login" , new_user_session_path, class: "btn btn-light fw-semibold text-danger" %>
                    <%= link_to "Register Your Family" , new_provider_path,
                      class: "btn btn-light fw-semibold text-danger" %>
                      <% end %>
    </div>
  </div>
</nav>

<div class="container mt-4">

  <div class="d-flex justify-content-between gap-4 mb-3">

  <!--This will show the uploaded photo where it exists, otherwise will use the generated one-->
  <% if @family.photo.attached? %>
    <%= image_tag @family.photo, alt: "#{@family.members} photo" , class: "card-img-center p-2 border rounded bg-light" ,
      style: "object-fit: cover; height: 300px; width: 600px" %>
      <% else %>
        <%= image_tag "https://image.pollinations.ai/prompt/japanese_family_called_#{@family.members}" ,
          alt: "Random family" , class: "card-img-top p-3 border rounded bg-light" , style: "object-fit: cover; height: 300px; width: 600px" %>
          <% end %>

            <div class="card-body p-3 border rounded bg-light">
              <!-- Family name -->
              <h2 class="card-title fw-bold mb-3" style="color: #FF5A5F;">
                <%= @family.members %>
              </h2>

              <p class="card-title fw-bold mb-4 d-flex justify-content-end">
                <%= @family.description %>
              </p>

              <!-- Location -->
              <p class="mb-2 text-muted"><strong>üìç Location:</strong> <span class="text-dark">
                  <%= @family.location %>
                </span></p>

              <!-- Event type -->
              <p class="mb-2 text-muted"><strong>üìÖ Available for:</strong> <span class="text-dark">
                  <%= @family.event_type %>
                </span></p>

              <!-- Rate -->
              <p class="mb-4 text-muted"><strong>üí¥ Hourly Rate:</strong> <span class="text-dark">¬•<%=
              @family.hourly_rate %></span></p>
  </div>
</div>

              <!-- Booking form -->
              <div class="p-3 border rounded bg-light">
                <%= simple_form_for [@family, @booking] do |b| %>
                  <div class="row g-3">
                    <div class="col-md-6">
                      <%= b.input :start_time, label: "Start Time" , as: :string, input_html: { data: {
                        controller: "datepicker" }, class: "form-control" } %>
                    </div>

                    <div class="col-md-6">
                      <%= b.input :end_time, label: "End Time" , as: :string, input_html: { data: {
                        controller: "datepicker" }, class: "form-control" } %>
                    </div>

                    <div class="col-md-6">
                      <%= b.input :start_hour, label: "From" , as: :string, input_html: { class: "form-control" ,
                        type: "time" , step: 900 } %>
                    </div>

                    <div class="col-md-6">
                      <%= b.input :end_hour, label: "To" , as: :string, input_html: { class: "form-control" ,
                        type: "time" , step: 900 } %>
                    </div>

                    <div class="col-12">
                      <%= b.input :total_cost, label: "Total Cost (¬•)" , input_html: { class: "form-control" } %>
                    </div>

                    <% if user_signed_in? %>
                      <%= b.button :submit, "Book this family" , class: "btn btn-danger px-4" %>
                        <% else %>
                          <%= button_tag "Book this family" , type: "button" , class: "btn btn-danger px-4" ,
                            onclick: "alert('You must be logged in!'); return false;" %>
                            <% end %>

                  </div>
                  <% end %>
              </div>
</div>

</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const startDateInput = document.querySelector("#booking_start_time");
    const endDateInput = document.querySelector("#booking_end_time");
    const startHourInput = document.querySelector("#booking_start_hour");
    const endHourInput = document.querySelector("#booking_end_hour");
    const totalCostInput = document.querySelector("#booking_total_cost");

    // hourly rate from backend, passed safely as float
    const hourlyRate = <%= @family.hourly_rate.to_f %>;

    function calculateCost() {
      const startDate = new Date(startDateInput.value);
      const endDate = new Date(endDateInput.value);

      const startHourParts = startHourInput.value.split(":");
      const endHourParts = endHourInput.value.split(":");

      if (
        !isNaN(startDate) && !isNaN(endDate) &&
        startHourParts.length === 2 && endHourParts.length === 2
      ) {
        // Calculate total days (full days between dates)
        let dayDiff = Math.floor((endDate - startDate) / (1000 * 60 * 60 * 24));

        // Calculate start and end hours in decimal (e.g., 9:15 = 9.25)
        const startHourDecimal = parseInt(startHourParts[0]) + parseInt(startHourParts[1]) / 60;
        const endHourDecimal = parseInt(endHourParts[0]) + parseInt(endHourParts[1]) / 60;

        // Calculate the hourly difference for partial days
        let hourDiff = endHourDecimal - startHourDecimal;

        // If end time is before start time, consider it 0 (or handle as needed)
        if (hourDiff < 0) hourDiff = 0;

        // Total hours = full days * 24 + partial hours
        const totalHours = dayDiff * 24 + hourDiff;

        if (totalHours > 0) {
          const totalCost = totalHours * hourlyRate;
          totalCostInput.value = totalCost.toFixed(2); // two decimals
        } else {
          totalCostInput.value = 0;
        }
      } else {
        totalCostInput.value = 0;
      }
    }

    startDateInput.addEventListener("change", calculateCost);
    endDateInput.addEventListener("change", calculateCost);
    startHourInput.addEventListener("change", calculateCost);
    endHourInput.addEventListener("change", calculateCost);
  });
</script>
